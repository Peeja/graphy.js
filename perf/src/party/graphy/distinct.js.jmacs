@. /* global S_FORMAT_IN SJ_CONFIG_READ SJ_CONFIG_DATASET B_LOAD */
@//@
@import '../../share/perf.jmacs'
@- B_LOAD
	const load = require('@{channel(`content.${S_FORMAT_IN}.load`)}');
	const lazy = {
		get UnindexedTrigDataset() {
			return require('../../../../../../build/ts/memory/dataset-unindexed.js').UnindexedTrigDataset;
		},

		get PartiallyIndexedTrigDataset() {
			return require('../../../../../../build/ts/memory/dataset-partial.js').PartiallyIndexedTrigDataset;
		},

		get SemiIndexedTrigDataset() {
			return require('../../../../../../build/ts/memory/dataset-semi.js').SemiIndexedTrigDataset;
		},
	};

	process.stdin
		.pipe(load({
			@{SJ_CONFIG_READ || ''}
			@{SJ_CONFIG_DATASET || ''}
		}))
		.on('load', (ds_dataset) => {
			const n_size = ds_dataset.size;
			@{end_test({
				size: /* syntax: js */ `n_size`,
			})}
		});
@:
	const read = require('@{channel(`content.${S_FORMAT_IN}.read`)}');
	const dataset = require('@{channel(`memory.dataset.fast`)}');

	const ds_dataset = process.stdin
		.pipe(read({
			@{SJ_CONFIG_READ || ''}
		}))
		.pipe(dataset({
			@{SJ_CONFIG_DATASET || ''}
		}));

	ds_dataset.on('finish', () => {
		const n_size = ds_dataset.size;
		@{end_test({
			size: /* syntax: js */ `n_size`,
		})}
	});
@;
